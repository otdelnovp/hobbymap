generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id          String    @id @default(cuid()) @map("_id")
  identifier  String
  token       String    @unique
  expires     DateTime
  
  @@unique([identifier, token])
}

enum ROLE {
  OWNER
  ADMIN
  USER
}

enum HOBBY {
  RCCAR
  DRONE
  RCPLANE
}

model User {
  id              String      @id @default(cuid()) @map("_id")
  name            String?
  email           String      @unique
  emailVerified   DateTime?   @map("verifiedAt")
  createdAt       DateTime    @default(now())
  hashedPassword  String?
  image           String?
  isDeleted       Boolean?

  role            ROLE        @default(USER)
  hobby           HOBBY?

  instagram       String?
  facebook        String?
  telegram        String?

  Account         Account[]
  Session         Session[]

  Location        Location[]
}

model Location {
  id              String      @id @default(cuid()) @map("_id")
  title           String
  description     String?
  hobby           HOBBY
  createdAt       DateTime    @default(now())

  latitude        Float
  longitude       Float

  userId          String
  user            User        @relation(fields: [userId], references: [id])
}
